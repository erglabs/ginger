#!/bin/bash
if ! _:ginger_bin du ; then return 1; fi

function filesize() {
  usage() { echo 'filesize -f file, -h for human readable'; return 1; }
  TEMP=`getopt -o hf: -l help -n 'fileop.gig' -- "$@"`
  eval set -- "$TEMP"
  OPERATION='du -shb $FILE '
  FILTER='| awk "{ print $1 }"'
  while true ; do
      case "$1" in
          -h)
              OPERATION='du -sh $FILE '  ; shift  ;;
          -v) FILTER=' ' ; shift ;;
          -f)
              if [[ ! -z $2 ]]; then FILE=$2; else shit; return 1 ; fi;;
          --) shift ; break ;;
          *) echo "Internal error!" ; exit 1 ;;
      esac
  done
  eval "$OPERATION $FILTER"
}

#
# getopt -o #getopt -options
# each char # option
#   a       # noarg/flag
#   a:      # required
#   a::     # optional

# getopt -o --long #long options
# for those are separated by comma ','
# string    # noarg/longflag
# string:   # required
# string::  # optional

##DEFAULTED=0 # default value
##execte and set locally
#TEMP=`getopt -o ab:c:: --long longa,longb:,longc:: -n 'test.sh' -- "$@"`
#eval set -- "$TEMP"
# while true ; do
#     case "$1" in
#         -a|--arga)
#             case "$2" in
#                 "") ARG_A='some default value' ; shift 2 ;;
#                 *) ARG_A=$2 ; shift 2 ;;
#             esac ;;
#         -b|--argb) ARG_B=1 ; shift ;;
#         -c|--argc)
#             case "$2" in
#                 "") shift 2 ;;
#                 *) ARG_C=$2 ; shift 2 ;;
#             esac ;;
#         --) shift ; break ;;
#         *) echo "Internal error!" ; exit 1 ;;
#     esac
# done
